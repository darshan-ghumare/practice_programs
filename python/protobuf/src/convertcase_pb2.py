# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: convertcase.proto

import sys
_b=sys.version_info[0]<3 and (lambda x:x) or (lambda x:x.encode('latin1'))
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
from google.protobuf import service as _service
from google.protobuf import service_reflection
from google.protobuf import descriptor_pb2
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()




DESCRIPTOR = _descriptor.FileDescriptor(
  name='convertcase.proto',
  package='convertcase',
  serialized_pb=_b('\n\x11\x63onvertcase.proto\x12\x0b\x63onvertcase\"F\n\x19\x43onvertcaseRequesttHeader\x12\x14\n\x0cservice_name\x18\x01 \x02(\t\x12\x13\n\x0bmethod_name\x18\x02 \x02(\t\"Z\n\x12\x43onvertcaseRequest\x12\x36\n\x06header\x18\x01 \x02(\x0b\x32&.convertcase.ConvertcaseRequesttHeader\x12\x0c\n\x04word\x18\x02 \x02(\t\"O\n\x13\x43onvertcaseResponse\x12\x0c\n\x04word\x18\x01 \x02(\t\x12\x15\n\rprocess_start\x18\x02 \x01(\x01\x12\x13\n\x0bprocess_end\x18\x03 \x01(\x01\x32\xb8\x01\n\x12\x43onvertcaseService\x12P\n\x0bToLowercase\x12\x1f.convertcase.ConvertcaseRequest\x1a .convertcase.ConvertcaseResponse\x12P\n\x0bToUppercase\x12\x1f.convertcase.ConvertcaseRequest\x1a .convertcase.ConvertcaseResponseBA\n\x1b\x63om.nutanix.convertcase.ifcB\x19\x43onvertcaseInterfaceProto\x80\x01\x01\x88\x01\x01\x90\x01\x01')
)
_sym_db.RegisterFileDescriptor(DESCRIPTOR)




_CONVERTCASEREQUESTTHEADER = _descriptor.Descriptor(
  name='ConvertcaseRequesttHeader',
  full_name='convertcase.ConvertcaseRequesttHeader',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='service_name', full_name='convertcase.ConvertcaseRequesttHeader.service_name', index=0,
      number=1, type=9, cpp_type=9, label=2,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='method_name', full_name='convertcase.ConvertcaseRequesttHeader.method_name', index=1,
      number=2, type=9, cpp_type=9, label=2,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=34,
  serialized_end=104,
)


_CONVERTCASEREQUEST = _descriptor.Descriptor(
  name='ConvertcaseRequest',
  full_name='convertcase.ConvertcaseRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='header', full_name='convertcase.ConvertcaseRequest.header', index=0,
      number=1, type=11, cpp_type=10, label=2,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='word', full_name='convertcase.ConvertcaseRequest.word', index=1,
      number=2, type=9, cpp_type=9, label=2,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=106,
  serialized_end=196,
)


_CONVERTCASERESPONSE = _descriptor.Descriptor(
  name='ConvertcaseResponse',
  full_name='convertcase.ConvertcaseResponse',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='word', full_name='convertcase.ConvertcaseResponse.word', index=0,
      number=1, type=9, cpp_type=9, label=2,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='process_start', full_name='convertcase.ConvertcaseResponse.process_start', index=1,
      number=2, type=1, cpp_type=5, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='process_end', full_name='convertcase.ConvertcaseResponse.process_end', index=2,
      number=3, type=1, cpp_type=5, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=198,
  serialized_end=277,
)

_CONVERTCASEREQUEST.fields_by_name['header'].message_type = _CONVERTCASEREQUESTTHEADER
DESCRIPTOR.message_types_by_name['ConvertcaseRequesttHeader'] = _CONVERTCASEREQUESTTHEADER
DESCRIPTOR.message_types_by_name['ConvertcaseRequest'] = _CONVERTCASEREQUEST
DESCRIPTOR.message_types_by_name['ConvertcaseResponse'] = _CONVERTCASERESPONSE

ConvertcaseRequesttHeader = _reflection.GeneratedProtocolMessageType('ConvertcaseRequesttHeader', (_message.Message,), dict(
  DESCRIPTOR = _CONVERTCASEREQUESTTHEADER,
  __module__ = 'convertcase_pb2'
  # @@protoc_insertion_point(class_scope:convertcase.ConvertcaseRequesttHeader)
  ))
_sym_db.RegisterMessage(ConvertcaseRequesttHeader)

ConvertcaseRequest = _reflection.GeneratedProtocolMessageType('ConvertcaseRequest', (_message.Message,), dict(
  DESCRIPTOR = _CONVERTCASEREQUEST,
  __module__ = 'convertcase_pb2'
  # @@protoc_insertion_point(class_scope:convertcase.ConvertcaseRequest)
  ))
_sym_db.RegisterMessage(ConvertcaseRequest)

ConvertcaseResponse = _reflection.GeneratedProtocolMessageType('ConvertcaseResponse', (_message.Message,), dict(
  DESCRIPTOR = _CONVERTCASERESPONSE,
  __module__ = 'convertcase_pb2'
  # @@protoc_insertion_point(class_scope:convertcase.ConvertcaseResponse)
  ))
_sym_db.RegisterMessage(ConvertcaseResponse)


DESCRIPTOR.has_options = True
DESCRIPTOR._options = _descriptor._ParseOptions(descriptor_pb2.FileOptions(), _b('\n\033com.nutanix.convertcase.ifcB\031ConvertcaseInterfaceProto\200\001\001\210\001\001\220\001\001'))

_CONVERTCASESERVICE = _descriptor.ServiceDescriptor(
  name='ConvertcaseService',
  full_name='convertcase.ConvertcaseService',
  file=DESCRIPTOR,
  index=0,
  options=None,
  serialized_start=280,
  serialized_end=464,
  methods=[
  _descriptor.MethodDescriptor(
    name='ToLowercase',
    full_name='convertcase.ConvertcaseService.ToLowercase',
    index=0,
    containing_service=None,
    input_type=_CONVERTCASEREQUEST,
    output_type=_CONVERTCASERESPONSE,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='ToUppercase',
    full_name='convertcase.ConvertcaseService.ToUppercase',
    index=1,
    containing_service=None,
    input_type=_CONVERTCASEREQUEST,
    output_type=_CONVERTCASERESPONSE,
    options=None,
  ),
])

ConvertcaseService = service_reflection.GeneratedServiceType('ConvertcaseService', (_service.Service,), dict(
  DESCRIPTOR = _CONVERTCASESERVICE,
  __module__ = 'convertcase_pb2'
  ))

ConvertcaseService_Stub = service_reflection.GeneratedServiceStubType('ConvertcaseService_Stub', (ConvertcaseService,), dict(
  DESCRIPTOR = _CONVERTCASESERVICE,
  __module__ = 'convertcase_pb2'
  ))


# @@protoc_insertion_point(module_scope)
